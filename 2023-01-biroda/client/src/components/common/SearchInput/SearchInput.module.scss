@use 'sass:color';
@import '/src/styles/variables';

.searchInput {
  display: inline-block;
  position: relative;

  & > svg {
    position: absolute;
    top: 3px;
    left: 13px;
    opacity: 0.5;
  }

  &:has(input:focus) > svg {
    opacity: 1;
  }

  & > input {
    border: 0;
    border-radius: 5px;
    line-height: 30px;
    height: 30px;
    padding: 0 5px 0 30px;
    color: $color-white;

    // this STILL won't work in firefox, where search input has no clear button at all
    // but I don't find this important enough to add a button in the component itself
    &::-webkit-search-cancel-button {
      -webkit-appearance: none;
      height: 1em;
      width: 1em;
      border-radius: 50em;
      // the (s)css parser dies at this point if we have a color with "#" in it (!!!)
      // so we trick the parser and force the sass lib it to output an `rgba(R, G, B, A)` format
      $stroke-color: color.adjust($color-white, $lightness: 0%);
      // it _should be_ possible to use scss vars inside the svg data uri (NOT plain css vars)
      // but there are some weird scoping issues with the variable: probably it's an issue
      // down on webpack loader level, but I'm not 100% sure...
      // (the svg icon "search" is from the feather library, converted to a data uri)
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='#{$stroke-color}' stroke-width='3' stroke-linecap='round' stroke-linejoin='round' class='feather feather-x-circle'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cline x1='15' y1='9' x2='9' y2='15'%3E%3C/line%3E%3Cline x1='9' y1='9' x2='15' y2='15'%3E%3C/line%3E%3C/svg%3E")
        no-repeat 50% 50%;
      background-size: contain;
      opacity: 0;
      pointer-events: none;
    }

    &:focus::-webkit-search-cancel-button {
      opacity: 0.8;
      pointer-events: all;
    }
  }
}

// themes
.header {
  background-color: $color-scarlet-red-shadow;
}
